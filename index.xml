<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sara Morakaian</title>
    <link>/</link>
    <description>Recent content on Sara Morakaian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 10 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Love Overcomes Language; How R and Python Communicate</title>
      <link>/post/2020/12/10/love-overcomes-language-how-r-and-python-communicate/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/12/10/love-overcomes-language-how-r-and-python-communicate/</guid>
      <description>A Tale of Two Should lovers who speak different languages be forced to never communicate and reach their truest potential as partners? No! #lovealwayswins Should two different languages never be able to exchange data? I think you know the answer to this question, homeslice. Here&#39;s how it goes.
 Easy, Breezy, Cover Squirrel First, R needs to have the library to exchange the flowers(data) he wants to give to Python.</description>
    </item>
    
    <item>
      <title>Project 1</title>
      <link>/project/project1/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/project/project1/</guid>
      <description>R Markdown bad_drivers &amp;lt;- read.csv(&amp;quot;bad_drivers.csv&amp;quot;) partisan_lean &amp;lt;- read.csv(&amp;quot;partisan_lean.csv&amp;quot;) bad_drivers &amp;lt;- bad_drivers partisan_lean &amp;lt;- partisan_lean library(tidyverse) ## ── Attaching packages ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.2 ✓ purrr 0.3.4 ## ✓ tibble 3.0.3 ✓ dplyr 1.0.1 ## ✓ tidyr 1.1.1 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(plotly) ## ## Attaching package: &amp;#39;plotly&amp;#39; ## The following object is masked from &amp;#39;package:ggplot2&amp;#39;: ## ## last_plot ## The following object is masked from &amp;#39;package:stats&amp;#39;: ## ## filter ## The following object is masked from &amp;#39;package:graphics&amp;#39;: ## ## layout library(GGally) ## Registered S3 method overwritten by &amp;#39;GGally&amp;#39;: ## method from ## +.</description>
    </item>
    
    <item>
      <title>ProjectTwo</title>
      <link>/project/project2/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/project/project2/</guid>
      <description>R Markdown Sara Morakabian, sm69929   Introduction library(tidyverse) ## ── Attaching packages ─────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.2 ✓ purrr 0.3.4 ## ✓ tibble 3.0.3 ✓ dplyr 1.0.1 ## ✓ tidyr 1.1.1 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(dplyr) library(interactions) library(lmtest) ## Loading required package: zoo ## ## Attaching package: &amp;#39;zoo&amp;#39; ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## as.</description>
    </item>
    
    <item>
      <title>Slithering Into Python</title>
      <link>/post/2020/12/09/slithering-into-python/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/12/09/slithering-into-python/</guid>
      <description>Breaking Up with R I started learning the basics of Python in the last unit of my computational biology course and laughed because I could not comprehend the transiton after working with R for over a year. Little did my close-minded self know how cool Python and the available packages could be (I still love you R, but I think we should consider an open relationship).
R and Python; Two Apples From the Same Tree Not only is Python is much more versatile and ranked number one amongst many programming languages, it lets me do everything I did in R!</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/projects/</guid>
      <description> Check out some of my coding projects below:
 Wrangling &amp;amp; Exploratory Data Analysis
 Modeling, Inference, Prediction
  -- </description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/resume/</guid>
      <description>    </description>
    </item>
    
  </channel>
</rss>
